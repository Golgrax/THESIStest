name: Build Petwatch Kivy APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Debug Repository Files
        run: |
          echo "Current working directory: $(pwd)"
          echo "Files in repository root:"
          ls -la

      - name: Ensure `buildozer.spec` Exists
        run: |
          if [ ! -f "buildozer.spec" ]; then
            echo "❌ ERROR: buildozer.spec is missing in repository root! Make sure it's committed."
            exit 1
          else
            echo "✅ buildozer.spec found. Proceeding."
          fi

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install System Dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            pkg-config automake m4 git zip unzip python3-pip autoconf libtool \
            libffi-dev pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev \
            libtinfo6 cmake libssl-dev libtool-bin
          pip install --upgrade pip setuptools

      - name: Install Buildozer & Dependencies
        run: |
          pip install --upgrade Cython==0.29.36
          pip install --upgrade buildozer
          pip install --upgrade Kivy-Garden
          pip install --upgrade https://github.com/kivymd/KivyMD/archive/master.zip
          buildozer --version

      - name: Fix libtool
        run: |
          sudo apt-get install -y libtool-bin
          sudo ln -s /usr/bin/libtoolize /usr/bin/libtool || true

      - name: Set up Android SDK and NDK
        run: |
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/tools/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          cd $ANDROID_SDK_ROOT/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
          rm cmdline-tools.zip
          echo "y" | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --install "platforms;android-31" "build-tools;33.0.2" "ndk;21.4.7075529"
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/tools/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH" >> $GITHUB_ENV

      - name: Prepare libffi fix
        run: |
          mkdir -p $HOME/.buildozer/android/platform/
          git clone --depth 1 https://github.com/libffi/libffi.git $HOME/libffi
          cd $HOME/libffi
          # Fix the libffi issue by running autoupdate
          autoreconf -fiv
          ./configure --enable-static --disable-shared
          make
          sudo make install
          echo "export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV

      - name: Modify buildozer.spec for libffi
        run: |
          # Check if libffi is in requirements and use system libffi instead
          if grep -q "libffi" buildozer.spec; then
            sed -i 's/,libffi//g' buildozer.spec
            echo "Modified buildozer.spec to use system libffi"
          fi

      - name: Clean previous builds
        run: |
          rm -rf .buildozer || true
          rm -rf bin || true

      - name: Build APK
        run: |
          export USE_SYSTEM_FFI=1
          buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: Kivy-APK
          path: bin/*.apk
